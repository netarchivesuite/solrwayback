<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>dk.kb.netarchivesuite.solrwayback</groupId>
  <artifactId>solrwayback</artifactId>
  <version>5.2.1</version>
  <packaging>war</packaging>
  <name>solrwayback</name>
  <url>https://maven.apache.org</url>

  <properties>
    <build.time>${maven.build.timestamp}</build.time>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>maven-restlet</id>
      <name>Public online Restlet repository</name>
      <url>https://maven.restlet.talend.com</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- jUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>3.4.0</version>
      <scope>test</scope>
    </dependency>

    <!-- REST -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>4.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.1.1</version>
    </dependency>

    <!-- JAKARTA DEPENDENCIES FOR EMBEDDED TEST SOLR-->
    <!-- Solr has started depending on jakarta versions of libraries and as SolrWayback still runs under javax, these need to be included to run the embedded tests.
         When we are to migrate completely to the jakarta namespace, we have to upgrade our tomcat servers to at least version 10, as jakarta webapps aren't compatible with
         older tomcats. -->
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>3.1.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>3.3.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>3.3.6</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>2.14.0</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.14.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-client</artifactId>
      <version>3.3.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-service-description</artifactId>
      <version>3.3.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-extension-providers</artifactId>
      <version>3.3.6</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.3.1</version>
    </dependency>

    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.14.2</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
    <!--Project only uses com.google.common.collect.Iterables  to split in blocks. Can be implemented simple and dependency removed-->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>30.0-jre</version>
    </dependency>

    <!-- SOLR -->    
    <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core -->
      <!-- SOLR -->
      <dependency>
        <groupId>org.apache.solr</groupId>
        <artifactId>solr-solrj</artifactId>
        <version>9.7.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.solr</groupId>
        <artifactId>solr-test-framework</artifactId>
        <version>9.7.0</version>
        <scope>test</scope>      
      </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.solr/solr-core -->
      <dependency>
          <groupId>org.apache.solr</groupId>
          <artifactId>solr-core</artifactId>
          <version>9.7.0</version>
          <scope>test</scope>
        <exclusions>
         <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </exclusion>
      
      </exclusions>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.apache.lucene/lucene-core -->
      <dependency>
          <groupId>org.apache.lucene</groupId>
          <artifactId>lucene-core</artifactId>
          <version>9.11.1</version>
          <scope>test</scope>
      </dependency>


    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>1.21</version>
      <!-- Used to get a reliable decompression of multi-part gzip stream in test -->
      <scope>test</scope>
    </dependency>


    <!-- Content encoding -->
    <dependency>
      <groupId>org.brotli</groupId>
      <artifactId>dec</artifactId>
      <version>0.1.2</version>
    </dependency>


    <!-- Support for SVG and other image types. -->
    <!-- Can render some SVG (and scale them), but causes a lot more trouble that it is worth for now.
      <dependency>
           <groupId>com.twelvemonkeys.imageio</groupId>
           <artifactId>imageio-batik</artifactId>
           <version>3.2.1</version>
       </dependency>
       <dependency>
           <groupId>batik</groupId>
           <artifactId>batik-transcoder</artifactId>
           <version>1.6-1</version>
          <exclusions>
               <exclusion>
                   <artifactId>fop</artifactId>
                   <groupId>fop</groupId>
               </exclusion>
           </exclusions>
       </dependency>
    -->
    <!-- used when uploading -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.3</version>
    </dependency>

    <!--  delete?
            <dependency>
                <groupId>net.sourceforge.htmlunit</groupId>
                <artifactId>htmlunit</artifactId>
                <version>2.11</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
     -->

    <!-- Logging dependencies -->
    <!-- Logging dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.29</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.29</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>1.7.29</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.29</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20231013</version>
    </dependency>

    <dependency>
        <groupId>it.unimi.dsi</groupId>
        <artifactId>fastutil</artifactId>
        <version>8.5.9</version>
    </dependency>

    <dependency>
      <groupId>org.netpreserve.openwayback</groupId>
      <artifactId>openwayback-core</artifactId>
      <version>2.3.2</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.kennycason</groupId>
      <artifactId>kumo-core</artifactId>
      <version>1.28</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <!-- This is needed by openwayback !-->
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources
        </directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.9.0</version>
        <configuration>
           <container>
             <containerId>tomcat9x</containerId>         
           </container>
           <deployables>
             <deployable>
               <type>war</type>
               <location>${project.build.directory}/${project.build.finalName}.war</location>
               <properties>
                  <context>/solrwayback</context>
               </properties>
             </deployable>
           </deployables>
         </configuration>
       </plugin>
            
      <plugin>
        <!-- Filter resources -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>
                true
              </addDefaultImplementationEntries>
            </manifest>
          </archive>
          <webResources>
            <webResource>
              <directory>${basedir}/src/js/dist</directory>
            </webResource>
            <webResource>
              <directory>${basedir}/src/main/resources/</directory>
              <includes>
                <include>build.properties</include>
              </includes>
              <targetPath>WEB-INF/classes</targetPath>
              <filtering>true</filtering>
            </webResource>
            <webResource>
              <directory>${basedir}/src/main/webapp/</directory>
              <includes>
                <include>api.jsp</include>
              </includes>
              <filtering>true</filtering>
            </webResource>
          </webResources>
        </configuration>
      </plugin>


      <!-- Frontend plugin to do all the node.js based processing-->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.10.0</version>

        <configuration>
          <workingDirectory>${basedir}/src/js</workingDirectory>
        </configuration>

        <executions>

          <execution>
            <id>Install node and npm</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v18.19.1</nodeVersion>
              <npmVersion>9.2.0</npmVersion>
              <installDirectory>target</installDirectory>
            </configuration>
          </execution>

          <execution>
            <id>Install JS dependencies (npm install)</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
              <installDirectory>target</installDirectory>
            </configuration>
          </execution>

          <execution>
            <id>Build frontend distribution for PRODUCTION (npm run build)</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
              <installDirectory>target</installDirectory>
            </configuration>
          </execution>


        </executions>
      </plugin>
    </plugins>

  </build>
</project>
